% \iffalse
%
%<*driver>
\ProvidesFile{asymptote.dtx}
%</driver>
%<pkg>\ProvidesPackage{asymptote}
%<*pkg>
  [2010/07/10 v1.15 Asymptote style file for LaTeX]
%</pkg>
%
%<*internal>
\begingroup
%</internal>
%<*batchfile>
\input docstrip.tex
\keepsilent
\preamble
____________________________
The ASYMPTOTE package

(C) 2003 Tom Prince
(C) 2003-2010 John Bowman

Adapted from comment.sty

Licence: GPL2+

\endpreamble
\nopostamble
\askforoverwritefalse
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{pkg}}}
%</batchfile>
%<batchfile>\endbatchfile
%<*internal>
\generate{\file{\jobname.ins}{\from{\jobname.dtx}{batchfile}}}
\nopreamble\nopostamble
\endgroup
\immediate\write18{makeindex -s gind.ist -o \jobname.ind  \jobname.idx}
\immediate\write18{makeindex -s gglo.ist -o \jobname.gls  \jobname.glo}
%</internal>
%
%<*driver>
\documentclass{ltxdoc}
\EnableCrossrefs
\CodelineIndex
\begin{document}
  \DocInput{asymptote.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{asymptote.dtx}
% \title{The \textsf{asymptote} package}
% \author{%
%    John Bowman et al.
% }
% \date{\filedate\qquad\fileversion}
% \maketitle
% \begin{abstract}
% This package provides integration of inline and external Asymptote graphics within a \LaTeX\ document.
% \end{abstract}
%
% \tableofcontents
% 
% \section{Introduction}
%
% \section{Implementation}
%
% \iffalse
%<*pkg>
% \fi
%
%    \begin{macrocode}
\def\Asymptote{{\tt Asymptote}}
%    \end{macrocode}
%
% \subsection{Allocations}
%
%    \begin{macrocode}
\RequirePackage{keyval}
\RequirePackage{ifthen}
\RequirePackage{ifxetex}
\RequirePackage{color,graphicx}
%    \end{macrocode}
% 
%    \begin{macrocode}
\newbox\ASYbox
\newcounter{asy}
%    \end{macrocode}
%
%    \begin{macrocode}
\newwrite\AsyStream
\newwrite\AsyPreStream
\newread\AsyTestStream
%    \end{macrocode}
%
%    \begin{macrocode}
\newif\ifASYinline
\newif\ifASYattach
\newif\ifASYdefaultinline
\newif\ifASYdefaultattach
%    \end{macrocode}
%
% \paragraph{Testing for PDF output}
% Note this is not quite the same as \cs{ifpdf}, since we still want PDF output when using XeTeX.
%    \begin{macrocode}
\newif\ifASYPDF
\ifxetex
  \ASYPDFtrue
\else
  \ifx\pdfoutput\undefined\else
    \ifcase\pdfoutput\else
      \ASYPDFtrue
    \fi
  \fi
\fi
%    \end{macrocode}
%
% \paragraph{Macros}
%    \begin{macrocode}
\def\csarg#1#2{\expandafter#1\csname#2\endcsname}
%    \end{macrocode}
%
% \subsection{Package options}
%
%    \begin{macrocode}
\DeclareOption{inline}{\ASYdefaultinlinetrue}
\DeclareOption{attach}{\ASYdefaultattachtrue}
\ProcessOptions*
%    \end{macrocode}
%
% \subsection{Bug squashing}
% 
%    \begin{macrocode}
\def\unquoteJobname#1"#2"#3\relax{%
  \def\rawJobname{#1}%
  \ifx\rawJobname\empty
    \def\rawJobname{#2}%
  \fi
}
\expandafter\unquoteJobname\jobname""\relax
%    \end{macrocode} 
% Work around jobname bug in MiKTeX 2.5 and 2.6:
% Turn stars in file names (resulting from spaces, etc.) into minus signs
%    \begin{macrocode}
\def\fixstar#1*#2\relax{%
  \def\argtwo{#2}%
  \ifx\argtwo\empty
    \gdef\Jobname{#1}%
  \else
    \fixstar#1-#2\relax
  \fi
}
\expandafter\fixstar\rawJobname*\relax
%    \end{macrocode}
%
% Work around bug in dvips.def: allow spaces in file names.
%    \begin{macrocode}
\def\Ginclude@eps#1{%
  \message{<#1>}%
  \bgroup
  \def\@tempa{!}%
  \dimen@\Gin@req@width
  \dimen@ii.1bp\relax
  \divide\dimen@\dimen@ii
  \@tempdima\Gin@req@height
  \divide\@tempdima\dimen@ii
    \special{PSfile=#1\space
      llx=\Gin@llx\space
      lly=\Gin@lly\space
      urx=\Gin@urx\space
      ury=\Gin@ury\space
      \ifx\Gin@scalex\@tempa\else rwi=\number\dimen@\space\fi
      \ifx\Gin@scaley\@tempa\else rhi=\number\@tempdima\space\fi
      \ifGin@clip clip\fi}%
  \egroup
}
%    \end{macrocode}
%
% \subsection{Input/Output}
% 
%    \begin{macrocode}
\InputIfFileExists{\jobname.pre}
%    \end{macrocode}
% 
%    \begin{macrocode}
\immediate\openout\AsyPreStream=\jobname.pre\relax
%    \end{macrocode}
%
%    \begin{macrocode}
\AtEndDocument{\immediate\closeout\AsyPreStream}
%    \end{macrocode}
%
%    \begin{macrocode}
\def\WriteAsyLine#1{%
  \immediate\write\AsyStream{\detokenize{#1}}%
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\globalASYdefs{}
\def\WriteGlobalAsyLine#1{%
  \expandafter\g@addto@macro\expandafter\globalASYdefs\expandafter{\detokenize{#1^^J}}%
}
%    \end{macrocode}
%
%
% \subsection{Processing commands}
% 
%    \begin{macrocode}
\def\ProcessAsymptote#1{%
  \begingroup
  \def\CurrentAsymptote{#1}%
  \let\do\@makeother \dospecials 
  \@makeother\^^L% and whatever other special cases
  \endlinechar`\^^M \catcode`\^^M=12 \xAsymptote
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\begingroup
  \catcode`\^^M=12 \endlinechar=-1\relax
  \gdef\xAsymptote{%
    \expandafter\ProcessAsymptoteLine
  }
%    \end{macrocode}
% 
%    \begin{macrocode}
  \gdef\ProcessAsymptoteLine#1^^M{%
    \def\test{#1}%
    \csarg\ifx{End\CurrentAsymptote Test}\test
      \edef\next{\noexpand\EndOfAsymptote{\CurrentAsymptote}}%
    \else
      \ThisAsymptote{#1}\let\next\ProcessAsymptoteLine
    \fi
    \next
  }
\endgroup
%    \end{macrocode}
% 
% 
%    \begin{macrocode}
\def\EndOfAsymptote#1{%
  \endgroup\end{#1}%
  \csname After#1Asymptote\endcsname
}
\def\AsymptoteEndDef#1{%
  {%
    \escapechar=-1\relax
    \csarg\xdef{End#1Test}{\string\\end\string\{#1\string\}}%
  }%
}
%    \end{macrocode}
% 
% 
%    \begin{macrocode}
\newcommand\asy[1][]{%
  \begingroup
  \let\par\empty
  \stepcounter{asy}%
  \global\let\ifASYinline\ifASYdefaultinline
  \global\let\ifASYattach\ifASYdefaultattach
  \setkeys{ASYkeys}{#1}%
  \ifASYattach
    \global\ASYinlinefalse
  \fi
  \immediate\write\AsyPreStream{%
    \noexpand\InputIfFileExists{\jobname-\the\c@asy.pre}%
  }
  \immediate\openout\AsyStream=\jobname-\the\c@asy.asy\relax
  \gdef\AsyFile{\Jobname-\the\c@asy}%
  \immediate\write\AsyStream{if(!settings.multipleView)}%
  \immediate\write\AsyStream{  settings.batchView=false;}%
  \ifxetex
    \immediate\write\AsyStream{settings.tex="xelatex";}%
  \else
    \ifASYPDF
      \immediate\write\AsyStream{settings.tex="pdflatex";}%
    \fi
  \fi
  \ifASYinline
    \immediate\write\AsyStream{settings.inlinetex=true;}%
    \immediate\write\AsyStream{deletepreamble();}%
  \fi
  \immediate\write\AsyStream{defaultfilename="\AsyFile";}%
  \immediate\write\AsyStream{if(settings.render < 0) settings.render=4;}%
  \ifASYattach
    \immediate\write\AsyStream{settings.inlineimage=false;}%
    \immediate\write\AsyStream{settings.embed=false;}%
    \immediate\write\AsyStream{settings.outformat="pdf";}%
    \immediate\write\AsyStream{settings.toolbar=true;}%
  \else
    \immediate\write\AsyStream{settings.inlineimage=true;}%
    \immediate\write\AsyStream{settings.embed=true;}%
    \immediate\write\AsyStream{settings.outformat="";}%
    \immediate\write\AsyStream{settings.toolbar=false;}%
    \immediate\write\AsyStream{viewportmargin=(2,2);}%
  \fi
  \immediate\write\AsyStream{\globalASYdefs}%
  \let\ThisAsymptote\WriteAsyLine
  \ProcessAsymptote{asy}%
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\AsymptoteEndDef{asy}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\AfterasyAsymptote{%
  \asy@finalise@stream
  \asy@input@graphic
  \relax
  \endgroup
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\asy@finalise@stream{%
  \ifx\ASYwidth\empty
    \def\ASYwidth{0}%
  \fi
  \ifx\ASYheight\empty
    \def\ASYheight{0}%
  \fi
  \ifASYattach
    \def\ASYdefaultviewportwidth{0}%
  \else
    \def\ASYdefaultviewportwidth{\the\linewidth}%
  \fi
  \ifx\ASYviewportwidth\empty
    \def\ASYviewportwidth{0}%
  \fi
  \ifx\ASYviewportheight\empty
    \def\ASYviewportheight{0}%
  \fi
  \immediate\write\AsyStream{size(\ASYwidth,\ASYheight);}%
  \immediate\write\AsyStream{viewportsize=(\ASYviewportwidth,\ASYviewportheight);}%
  \gdef\ASYwidth{}%
  \gdef\ASYheight{}%
  \gdef\ASYviewportwidth{\ASYdefaultviewportwidth}%
  \gdef\ASYviewportheight{}%
  \immediate\closeout\AsyStream
}
%    \end{macrocode}
% 
%    \begin{macrocode}
\def\asy@input@graphic{%
  \ifASYinline
    \openin\AsyTestStream=\AsyFile.tex\relax
    \ifeof\AsyTestStream
      \PackageWarning{asymptote}{file `\AsyFile.tex' not found}%
      \closein\AsyTestStream
    \else
      \closein\AsyTestStream
      \catcode`:=12
      \@input{\AsyFile.tex}%
    \fi
  \else
    \ifASYPDF
      \openin\AsyTestStream=\AsyFile.pdf\relax
    \else
      \openin\AsyTestStream=\AsyFile.eps\relax
    \fi
    \ifeof\AsyTestStream
      \closein\AsyTestStream
      \openin\AsyTestStream=\AsyFile.tex\relax
      \ifeof\AsyTestStream
        \ifASYPDF
          \PackageWarning{asymptote}{file `\AsyFile.pdf' not found}%
        \else
          \PackageWarning{asymptote}{file `\AsyFile.eps' not found}%
        \fi
      \else
        \catcode`:=12
        \@input{\AsyFile.tex}%
      \fi
      \closein\AsyTestStream
    \else
      \closein\AsyTestStream
      \ifASYattach
        \ifASYPDF
          \openin\AsyTestStream=\AsyFile+0.pdf\relax
        \fi
        \ifeof\AsyTestStream
          \setbox\ASYbox=\hbox{\includegraphics[hiresbb]{\AsyFile}}%
        \else
         \setbox\ASYbox=\hbox{\includegraphics[hiresbb]{\AsyFile+0}}%
        \fi
        \textattachfile{\AsyFile.pdf}{\phantom{\copy\ASYbox}}%
        \vskip-\ht\ASYbox
        \indent
        \box\ASYbox
        \closein\AsyTestStream
      \else
        \includegraphics[hiresbb]{\AsyFile}%
      \fi
    \fi
  \fi
}

%    \end{macrocode}
%
%    \begin{macrocode}
\def\asydef{%
  \let\ThisAsymptote\WriteGlobalAsyLine
  \ProcessAsymptote{asydef}%
}
\AsymptoteEndDef{asydef}
\def\AfterasydefAsymptote{}
%    \end{macrocode}
% 
%    \begin{macrocode}
\newcommand{\ASYanimategraphics}[5][]{%
  \openin\AsyTestStream=_#3.pdf\relax
  \ifeof\AsyTestStream\else
    \animategraphics[{#1}]{#2}{_#3}{#4}{#5}%
  \fi
}
%    \end{macrocode}
%
% \subsection{Keys for graphics processing}
%
%    \begin{macrocode}
\gdef\ASYwidth{}
\define@key{ASYkeys}{width}{%
  \gdef\ASYwidth{#1}%
}
\gdef\ASYheight{}
\define@key{ASYkeys}{height}{%
  \gdef\ASYheight{#1}%
}
\gdef\ASYviewportwidth{\ASYdefaultviewportwidth}
\define@key{ASYkeys}{viewportwidth}{%
  \gdef\ASYviewportwidth{#1}%
}
\gdef\ASYviewportheight{}
\define@key{ASYkeys}{viewportheight}{%
  \gdef\ASYviewportheight{#1}%
}
\define@key{ASYkeys}{attach}[true]{%
  \ifthenelse{\equal{#1}{true}}{\global\ASYattachtrue}{\global\ASYattachfalse}%
}
\define@key{ASYkeys}{inline}[true]{%
  \ifthenelse{\equal{#1}{true}}{\global\ASYinlinetrue}{\global\ASYinlinefalse}%
}
%    \end{macrocode}
%
% 
% \iffalse
%</pkg>
% \fi
%
% \Finale
%